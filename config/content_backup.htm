<h1>網管</h1>
<h2>W1</h2>
<p>(1) 以子模組的方式使用 CMSiMDE</p>
<p>將 Github 倉儲 git clone 到近端工作區之後, 可以利用 git submodule add 指令將遠端倉儲中的 CMSiMDE 程式碼納為倉儲中的 cmsimde 子目錄, 並且保持與遠端原始碼的版次關聯 (也就是能夠指定採用遠端特定版本的 CMSiMDE 程式碼).</p>
<p>好處: 子模組可以與遠端官方的倉儲保持關聯, 一旦 CMSiMDE 更新版本, 使用者可以利用 git pull 直接拉下遠端 CMSiMDE 的最新程式碼.</p>
<p>壞處: 使用者若要 git clone 遠端的倉儲至近端, 需要加上 --recurse-submodules 選項</p>
<p>(2) 不以子模組的方式使用 CMSiMDE</p>
<p>假如不需要保持與遠端 CMSiMDE 倉儲特定版次的關聯性, 可以直接將 CMSiMDE 倉儲中的檔案, 直接放入 cmsimde 目錄, 並將其中 up_dir 的內容複製到希望建立網頁的倉儲主目錄中即可.</p>
<p>好處: 使用者可以直接使用 git clone 指令, 拉下遠端倉儲的所有資料.</p>
<p>壞處: 失去與遠端 CMSiMDE 倉儲的關聯, 假如要使用最新改版後的 CMSiMDE 原始碼, 必須另外 git clone 然後再取代倉儲中 cmsimde 的所有檔案.</p>
<p></p>
<p>\</p>
<h2>W2</h2>
<p>上課筆記 - https://raw.githubusercontent.com/mdecourse/wcmj2020/master/downloads/w2_review.txt ，主題二: 要求各學員在 blogger.com 建立 學號.blogspot.com 的網誌並且利用學校配發的 @gm 帳號登錄 github 帳號。</p>
<h2>W3</h2>
<p>在 YouTube 直播加上 OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作，完成後將影片嵌入個人網頁、網誌及簡報中</p>
<h2>W6</h2>
<p>Online education</p>
<p>線上開會: https://meet.google.com</p>
<p>讓手機可以利用電腦熱點上網</p>
<p>將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -&gt; 網路和網際網路 -&gt; 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網.</p>
<p>利用手機鏡頭當作 webcam:</p>
<p>Android: <span>https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows</span></p>
<p>iPhone: https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/</p>
<h2>W7</h2>
<p>下載可攜程式系統</p>
<p><a aria-label="分享下列連結：https://youtu.be/IOauashmKho" class="ytp-share-panel-link ytp-no-contextmenu" href="https://youtu.be/IOauashmKho" target="_blank" title="分享連結">https://youtu.be/IOauashmKho</a></p>
<p>利用 git 指令建立 cmsimde 網站</p>
<p><a aria-label="分享下列連結：https://youtu.be/NJTQulLMXnU" class="ytp-share-panel-link ytp-no-contextmenu" href="https://youtu.be/NJTQulLMXnU" target="_blank">https://youtu.be/NJTQulLMXnU</a></p>
<h2>W8</h2>
<p>重新下載 wcmj2020_tool.7z, 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等). 學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中.</p>
<h2>W9</h2>
<h3>電腦硬體簡介</h3>
<p>機殼：容納和保護主機營體的主機殼</p>
<p>電源(Power)：是提供內接式元件電力來源的組件，他將市電轉換為直流電供給其他元件使用。</p>
<p>顯示卡(VGA )：顯示卡在電腦中主要作用就是程式運行時根據CPU提共的指令和有關數據，轉換成顯示器能夠接受的文字和圖形顯示信號後通過螢幕顯示出來，簡單來說，就是把電腦計算出來的文字與圖形表現在顯示器上。</p>
<p>硬碟：硬碟就是電腦中負責儲存資料的工具，它就像是一個資料庫一樣，電腦中的大小資料均可以在此找到。</p>
<p>中央處理器(CPU)：又稱為電腦的心臟，而CPU主要工作是算術、運輯運算，解讀電腦內的每個指令來控制電腦的運作。</p>
<p>主機板：主機板的功能主要在承戴其插卡，所有電腦裡的東西都會接到主機板 ，它們之間要相互的傳資料也是經過主機板，之後再傳到對方，簡單的來說，它就像一個轉運站一樣。</p>
<p>記憶體(RAM)：記憶體的主要功用是暫存資料，當它被使用時，系統可以從RAM上存取資料，而且需要電力來維持它的記憶，所以記憶體可以說是電腦系統中最佳倉儲管理員。</p>
<h3>網路架構簡介</h3>
<p>網路架構模型分為4層，也就是經常聽到的DoD（Department of Defense）或是TCP/IP模型，最上層為應用層（Application Layer），接下來依據為傳輸層（Transport Layer）、網路層（Internet Layer）、鏈結層（Link Layer）。</p>
<p>應用層（Application Layer）:網路模型的最上層，也是想要利用網路傳輸資料的程式，能夠直接碰觸到的層級。無論是收發郵件的POP3/SMTP/IMAP、或是網頁傳送標準HTTP、檔案傳輸協定FTP、現代網路不可或缺的網域/位址轉換伺服器DNS，還是近年興起的BitTorrent P2P（peer to peer）傳輸協定，均屬於這層的管轄範圍。</p>
<p>傳輸層（Transport Layer）:資料經過了應用層之後，下一層便是傳輸層，此層對應用層傳送過來的資料進行處理，建立2台電腦之間可靠的傳輸。在此層常見的2種協定為TCP與UDP，絕大多數應用層協定都會選擇TCP，因為TCP提供一連串偵錯、重送、資料順序、流量控管等實作，確保2台電腦之間的連線正常，不會產生投桃報李的狀況。</p>
<p>網路層（Transport Layer）:此層就相當是郵件或包裹上方的地址欄位，無論你想要寄去世界上任何一角落，只要將地址寫好，郵件或包裹便會到達目的地。</p>
<p>鏈結層（Link Level）:位於整個網路架構的最底層，負責制定資料傳輸的「實體」規格。所謂「實體」，就是我們眼睛看的到，手可以摸到的部分。以乙太網路來說，凡是接頭規格、傳輸線材種類、不同電壓代表何種資訊，都是鏈結層負責的內容。</p>