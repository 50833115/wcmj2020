var tipuesearch = {"pages": [{'title': '關於', 'text': '這是50833115網際內容管理課程的網頁 \n 總共使用兩套網際內容管理系統: \n https://github.com/mdecourse/cmsimde \n https://www.blogger.com/ \n 50833114 : \n Repository (倉儲):  https://github.com/50833115/wcmj2020 \n Blog (網誌):  https://50833115.blogspot.com/ \n', 'tags': '', 'url': '關於.html'}, {'title': '網管', 'text': '', 'tags': '', 'url': '網管.html'}, {'title': 'W1', 'text': '(1) 以子模組的方式使用 CMSiMDE \n 將 Github 倉儲 git clone 到近端工作區之後, 可以利用 git submodule add 指令將遠端倉儲中的 CMSiMDE 程式碼納為倉儲中的 cmsimde 子目錄, 並且保持與遠端原始碼的版次關聯 (也就是能夠指定採用遠端特定版本的 CMSiMDE 程式碼). \n 好處: 子模組可以與遠端官方的倉儲保持關聯, 一旦 CMSiMDE 更新版本, 使用者可以利用 git pull 直接拉下遠端 CMSiMDE 的最新程式碼. \n 壞處: 使用者若要 git clone 遠端的倉儲至近端, 需要加上 --recurse-submodules 選項 \n (2) 不以子模組的方式使用 CMSiMDE \n 假如不需要保持與遠端 CMSiMDE 倉儲特定版次的關聯性, 可以直接將 CMSiMDE 倉儲中的檔案, 直接放入 cmsimde 目錄, 並將其中 up_dir 的內容複製到希望建立網頁的倉儲主目錄中即可. \n 好處: 使用者可以直接使用 git clone 指令, 拉下遠端倉儲的所有資料. \n 壞處: 失去與遠端 CMSiMDE 倉儲的關聯, 假如要使用最新改版後的 CMSiMDE 原始碼, 必須另外 git clone 然後再取代倉儲中 cmsimde 的所有檔案. \n \n \\ \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '上課筆記 - 學員在 blogger.com 建立 學號.blogspot.com 的網誌並且利用學校配發的 @gm 帳號登錄 github 帳號。 \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '在 YouTube 直播加上 OBS 串流模式下，將電腦桌面疊上直播者的 webcam 畫面製作，完成後將影片嵌入個人網頁、網誌及簡報中 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W6', 'text': 'Online education \n 線上開會: https://meet.google.com \n 讓手機可以利用電腦熱點上網 \n 將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -> 網路和網際網路 -> 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網. \n 利用手機鏡頭當作 webcam: \n Android:\xa0 https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows \n iPhone: https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/ \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '下載可攜程式系統 \n https://youtu.be/IOauashmKho \n 利用 git 指令建立 cmsimde 網站 \n https://youtu.be/NJTQulLMXnU \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '重新下載 wcmj2020_tool.7z, 檔案大小為 435 MB, 解開壓縮後為 1.8 GB (其中包括 Mypaint, Dia 與 OBS 等). 學會利用 ShareX 與 OBS 拍攝螢幕操作影片, 並將個人維護倉儲與網站的過程影片放入個人網站中. \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '', 'tags': '', 'url': 'W9.html'}, {'title': '電腦硬體簡介', 'text': '機殼：容納和保護主機營體的主機殼 \n 電源(Power)：是提供內接式元件電力來源的組件，他將市電轉換為直流電供給其他元件使用。 \n 顯示卡(VGA )：顯示卡在電腦中主要作用就是程式運行時根據CPU提共的指令和有關數據，轉換成顯示器能夠接受的文字和圖形顯示信號後通過螢幕顯示出來，簡單來說，就是把電腦計算出來的文字與圖形表現在顯示器上。 \n 硬碟：硬碟就是電腦中負責儲存資料的工具，它就像是一個資料庫一樣，電腦中的大小資料均可以在此找到。 \n 中央處理器(CPU)：又稱為電腦的心臟，而CPU主要工作是算術、運輯運算，解讀電腦內的每個指令來控制電腦的運作。 \n 主機板：主機板的功能主要在承戴其插卡，所有電腦裡的東西都會接到主機板 ，它們之間要相互的傳資料也是經過主機板，之後再傳到對方，簡單的來說，它就像一個轉運站一樣。 \n 記憶體(RAM)：記憶體的主要功用是暫存資料，當它被使用時，系統可以從RAM上存取資料，而且需要電力來維持它的記憶，所以記憶體可以說是電腦系統中最佳倉儲管理員。 \n', 'tags': '', 'url': '電腦硬體簡介.html'}, {'title': '網路架構簡介', 'text': '網路架構模型分為4層，也就是經常聽到的DoD（Department of Defense）或是TCP/IP模型，最上層為應用層（Application Layer），接下來依據為傳輸層（Transport Layer）、網路層（Internet Layer）、鏈結層（Link Layer）。 \n 應用層（Application Layer）:網路模型的最上層，也是想要利用網路傳輸資料的程式，能夠直接碰觸到的層級。無論是收發郵件的POP3/SMTP/IMAP、或是網頁傳送標準HTTP、檔案傳輸協定FTP、現代網路不可或缺的網域/位址轉換伺服器DNS，還是近年興起的BitTorrent P2P（peer to peer）傳輸協定，均屬於這層的管轄範圍。 \n 傳輸層（Transport Layer）:資料經過了應用層之後，下一層便是傳輸層，此層對應用層傳送過來的資料進行處理，建立2台電腦之間可靠的傳輸。在此層常見的2種協定為TCP與UDP，絕大多數應用層協定都會選擇TCP，因為TCP提供一連串偵錯、重送、資料順序、流量控管等實作，確保2台電腦之間的連線正常，不會產生投桃報李的狀況。 \n 網路層（Transport Layer）:此層就相當是郵件或包裹上方的地址欄位，無論你想要寄去世界上任何一角落，只要將地址寫好，郵件或包裹便會到達目的地。 \n 鏈結層（Link Level）:位於整個網路架構的最底層，負責制定資料傳輸的「實體」規格。所謂「實體」，就是我們眼睛看的到，手可以摸到的部分。以乙太網路來說，凡是接頭規格、傳輸線材種類、不同電壓代表何種資訊，都是鏈結層負責的內容。 \n', 'tags': '', 'url': '網路架構簡介.html'}, {'title': 'W12-13', 'text': 'W12 Leo Editor 與 Pelican Blog \n W13 Pelican Blog 內容與 Google Blogger 同步 \n', 'tags': '', 'url': 'W12-13.html'}, {'title': 'Blogger API', 'text': '基本概念: \n 1. 這裡所指的 Blogger API 為: https://developers.google.com/blogger/docs/3.0/using \n 2. 將 CMSiMDE 中的 Pelican Blog 內容同步到 Google Blogger 的目的, 在讓網際內容管理系統中的網誌原始資料修改過程具備版次, 而且可同時將網誌出版在 Github Pages 與 Google Blogger 中, 讓網際內容的保存較具有永續性. \n 3. Google Blogger 中的網誌系統各有獨立 ID, 這裡稱為 blog_id, 而網誌中的每一篇文章各有獨立 ID, 這裡稱為 post_id. \n 4. Google Blogger 管理者登入後, 在 Settings - Permissions 項下, 允許 invite more authors, 而且在 Settings - Permissions - Blog admins and Authors 項下, 允許將所邀請共同寫作的 Author 提升為 Admin 管理者. \n 5. Google 的每一個 API 都允許使用者建立以 Oauth2 為基礎的登入使用授權憑證, 配合所啟動的各種 API 程式庫, 一旦啟用並登入後, 可以透過程式方法, 呼叫程式庫功能, 對各種 Google 所提供的服務 (Blogger, Drive, Gmail, Calendar 等) 新增內容. 以 Blogger 而言, 只要使用者被設為某一網誌的共同作者, 即擁有在該網誌新增或編輯自己所發布的網誌文章權限. \n', 'tags': '', 'url': 'Blogger API.html'}, {'title': 'W14', 'text': '從  https://2019wcm.blogspot.com/2019/03/posted-via-python.html  取得Google Blogger Python API 程式, 修改後執行, 測試是否可以讀取設定的 client_secrets.json, 在各自的 Blogger ID 與 Post ID 中新增或修改網誌文章. \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15-W18', 'text': '整理個人網站及倉儲，要進行評分', 'tags': '', 'url': 'W15-W18.html'}]};